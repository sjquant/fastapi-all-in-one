[tool.poetry]
name = "app"
version = "0.1.0"
description = "My FastAPI server template"
authors = ["sjquant <seonujang92@gmail.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.103.1"
pydantic = "^2.4.2"
pydantic-settings = "^2.0.3"
uvicorn = "^0.23.2"
typer = {extras = ["all"], version = "^0.9.0"}
sqlalchemy = "^2.0.21"
asyncpg = "^0.28.0"
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
alembic = "^1.12.0"


[tool.poetry.group.dev.dependencies]
ruff = "0.0.291"
black = "23.9.1"
pytest = "^7.4.2"
pytest-asyncio = "^0.21.1"
pytest-env = "^1.0.1"
pytest-mock = "^3.11.1"
pytest-alembic = "^0.10.7"
freezegun = "^1.2.2"
pyright = "1.1.329"
pytest-cov = "^4.1.0"
psycopg2-binary = "^2.9.9"
greenlet = "^3.0.0"

[tool.ruff]
line-length = 100
fix = true

[tool.ruff.per-file-ignores]
"__init__.py" = ["E402"]

[tool.black]
line-length = 100
preview = true

[tool.pyright]
exclude = ["alembic/*"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.pytest.ini_options]
asyncio_mode = "auto"
env = [
    "ENV=test",
    "JWT_SECRET_KEY=AUTH_SECRET_KEY",
    "JWT_ALGORITHM=HS256",
    "DB_URL=postgresql+asyncpg://user:password@localhost:15432/db_test",
    "DB_POOL_SIZE=5",
    "DB_POOL_MAX_OVERFLOW=5",
]
